<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kijK/wAuzwbVVX8oagAAAABJRU5ErkJggg==
</value>
  </data>
</root>